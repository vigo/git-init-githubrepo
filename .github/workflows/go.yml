name: build and test

on:
  pull_request:
    paths:
      - '**.go'
  push:
    branches:
      - main
    tags-ignore:
      - '**'
    paths:
      - '**.go'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: "go.mod"
      id: go

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      env:
        GOLANG_ENV: test
      run: |
        go test -v -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Build app
      id: build_go_app
      run: |
        go build -v -o git-init-githubrepo ./cmd/git-init-githubrepo
        echo ::set-output name=exit_code::$?

    - name: Notify Slack on success
      if: steps.build_go_app.outputs.exit_code == 0
      id: slack_notification
      uses: ravsamhq/notify-slack-action@v2
      with:
        status: ${{ job.status }}
        notification_title: 'Build and test are succeeded'
        message_format: 'git-init-githubrepo build succeeded. <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>'
        footer: 'repo: <{repo_url}|{repo}>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
